arrayequals.java:   It checks to see if the arrays are equal in value and then prints whether they are or not.

arrayinitialize.java:   prints out "smallprims[value of i] = [the number the array has stored in i value (0 is first value)]" keeps going untill array has no more numbers 

arrayinitialize2.java:  Is the same as arrayinitialize but the array is created with the amount of integers it can hold (in this case 3) then each place is given a value (2, 3, 5).

arraysort.java:     Sorts the array in assending value and prints it out

breakoutwhilenested.java:   "breakhere" identifies the initial loop and when "break breakhere;" is written it breaks from the loop identified as breakhere

bufferedreaderinput.java:   reads raw characters of the input which can then be broken into different data types. Uses BufferedReader instead of a scanner. InputSteamReader converts the input from bytes to characters

continueexample.java:   skips following code and restarts the innerost while loop

copyarray.java:     copies from smallprimes index 2 and overrides luckynumbers from index 1 for 3 indexs 102, 1003, 1004 are replaced with 5, 7 , 9

doloop.java:    do loop starts loop first and checks condition after doing loop. runs loop at least once.

foreachloop.java:   short method for writing: for each element in smallprimes do something, in this case print out the element.

foreachmulti.java:  int[][] magicsquares creates an array of arrays. Then for each integer array in magic squares do the following for loop which prints out what is contained in each integer array

forloop.java:

functionvoid.java:

globalconstant.java:

ifstatement.java:

joptionpaneinput.java:

localconstant.java:

logic.java:

mainargsarray.java:

mathoperatorsfunctions.java:

multidimensionalarray.java:

nesteddowhile.java:

nestedfor.java:

nestedif.java:

nestedswitchstatement.java:

nestedwhile.java:

overloadedfunction.java:

raggedarray.java:

randomnumber.java:

reinitializearray.java:

scannerinput.java:

searcharray.java:

stringtonumber.java:

switchstatement.java:

typecast.java:

types.java:

whileloop.java: